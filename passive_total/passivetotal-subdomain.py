#!/usr/bin/env python
"""subdomains via passive total

"""
__author__ = 'CG'
__version__ = '1.0.0'
__description__ = "Search passive DNS, WHOIS and SSL certificates based on keywords"
__keywords__ = ['search', 'keywords', 'analysis']

import requests

#username = "--YOUR-USERNAME--"
#api_key = "--YOUR-API-KEY--"

auth = (username, api_key)
base_url = "https://api.passivetotal.org"


def passivetotal_get(path, query):
    url = base_url + path
    data = {'query': query}
    # Important: Specifying json= here instead of data= ensures that the
    # Content-Type header is application/json, which is necessary.
    response = requests.get(url, auth=auth, json=data)
    # This parses the response text as JSON and returns the data representation.
    return response.json()

#passive DNS infoz

#pdns_results = passivetotal_get('/v2/dns/passive', 'spotify.com')
#for resolve in pdns_results['results']:
#    print('Found resolution: {}'.format(resolve['resolve']))

# Alias get_dns_passive to a GET to /v2/dns/passive
#from functools import partial
#get_dns_passive = partial(passivetotal_get, '/v2/dns/passive')
#pdns_results_example = get_dns_passive('example.org')


#check API key :-)
#account_info = passivetotal_get('/v2/account','')
#print account_info


#get submdomains from PT
domain = 'spotify.com'
subdomain = passivetotal_get('/v2/enrichment/subdomains', domain)
print subdomain
for sub in subdomain['subdomains']:
	print sub+'.'+domain







